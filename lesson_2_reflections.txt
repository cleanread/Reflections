Question 1
What happens when you initialize a repository? Why do you need to do it?

Answer 1
The hidden folder ".git" is created along with git metadata.

This allows the user to submit commits later.

Question 2
How is the staging area different from the working directory and the repository? What value do you think it offers?

Answer 2
The staging area allows the user to group files to be updated into a single logical commit.

Question 3
How can you use the staging area to make sure you have one commit per logical change?

Answer 3
Using "git diff --staged" to compare the staged version to the checked out version

Also using "git diff" to compare the working directory with the staged version.

Question 4
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Answer 4
Branches could help with re-tooling the backend or DB structure

Branches could also be used for experimental features

They help because the development of the branch does not stop the master branch from being developed

Question 5
How do the diagrams help you visualize the branch structure?

Answer 5
The diagrams tie the commits to each other in a chronological way so that you can see where they were made.

Question 6
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Answer 6
It is a way of joining to divergent versions of the program back into one.

It is represented as a combining of multiple paths because the purpose of it is to combine commits



